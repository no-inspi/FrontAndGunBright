{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Y9FMLC706\\\\Documents\\\\Bright\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Gun from 'gun/gun';\nimport Sea from 'gun/sea';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gun = Gun({\n  peers: ['http:localhost:8000/gun']\n});\n\nfunction App() {\n  _s();\n\n  const [txt, setTxt] = useState();\n  useEffect(() => {\n    console.log(\"sea object\", sea);\n    gun.get('text').once(node => {\n      console.log(node);\n\n      if (node == undefined) {\n        gun.get('text').put({\n          text: \"Write the text here\"\n        });\n      } else {\n        console.log(\"Found Node\");\n        setTxt(node.text);\n      }\n    });\n    gun.get('text').on(node => {\n      console.log(\"Receiving Update\");\n      console.log(node);\n      setTxt(node.text);\n    });\n  }, []);\n\n  const updateText = event => {\n    console.log(\"Updating Text\");\n    console.log(event.target.value);\n    gun.get('text').put({\n      text: event.target.value\n    });\n    setTxt(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Collaborative Document With GunJS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: txt,\n      onChange: updateText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MP9KHL9Vcv2MzqrmcSHl9oUuKWM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Y9FMLC706/Documents/Bright/src/App.js"],"names":["Gun","Sea","useEffect","useState","gun","peers","App","txt","setTxt","console","log","sea","get","once","node","undefined","put","text","on","updateText","event","target","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,GAAP,MAAgB,SAAhB;AACA,OAAOC,GAAP,MAAgB,SAAhB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;AAEA,MAAMC,GAAG,GAAGJ,GAAG,CAAC;AACdK,EAAAA,KAAK,EAAE,CAAC,yBAAD;AADO,CAAD,CAAf;;AAKA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,EAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBC,GAAzB;AACAP,IAAAA,GAAG,CAACQ,GAAJ,CAAQ,MAAR,EAAgBC,IAAhB,CAAsBC,IAAD,IAAU;AAC7BL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;;AACA,UAAGA,IAAI,IAAIC,SAAX,EAAsB;AACpBX,QAAAA,GAAG,CAACQ,GAAJ,CAAQ,MAAR,EAAgBI,GAAhB,CAAoB;AAACC,UAAAA,IAAI,EAAE;AAAP,SAApB;AACD,OAFD,MAEO;AACLR,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAF,QAAAA,MAAM,CAACM,IAAI,CAACG,IAAN,CAAN;AACD;AACF,KARD;AAUAb,IAAAA,GAAG,CAACQ,GAAJ,CAAQ,MAAR,EAAgBM,EAAhB,CAAoBJ,IAAD,IAAU;AAC3BL,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAN,MAAAA,MAAM,CAACM,IAAI,CAACG,IAAN,CAAN;AACD,KAJD;AAKD,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,QAAME,UAAU,GAAIC,KAAD,IAAW;AAC5BX,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACAlB,IAAAA,GAAG,CAACQ,GAAJ,CAAQ,MAAR,EAAgBI,GAAhB,CAAoB;AAACC,MAAAA,IAAI,EAAEG,KAAK,CAACC,MAAN,CAAaC;AAApB,KAApB;AACAd,IAAAA,MAAM,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAU,MAAA,KAAK,EAAIf,GAAnB;AAAwB,MAAA,QAAQ,EAAIY;AAApC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArCQb,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import './App.css';\r\nimport Gun from 'gun/gun'\r\nimport Sea from 'gun/sea'\r\nimport {useEffect, useState} from 'react'\r\n\r\nconst gun = Gun({\r\n  peers: ['http:localhost:8000/gun']\r\n})\r\n\r\n\r\nfunction App() {\r\n\r\n  const [txt, setTxt] = useState()\r\n\r\n  useEffect(() => {\r\n    console.log(\"sea object\",sea)\r\n    gun.get('text').once((node) => {\r\n      console.log(node)\r\n      if(node == undefined) {\r\n        gun.get('text').put({text: \"Write the text here\"})\r\n      } else {\r\n        console.log(\"Found Node\")\r\n        setTxt(node.text)\r\n      }\r\n    })\r\n\r\n    gun.get('text').on((node) => {\r\n      console.log(\"Receiving Update\")\r\n      console.log(node)\r\n      setTxt(node.text)\r\n    })\r\n  }, [])\r\n\r\n  const updateText = (event) => {\r\n    console.log(\"Updating Text\")\r\n    console.log(event.target.value)\r\n    gun.get('text').put({text: event.target.value})\r\n    setTxt(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Collaborative Document With GunJS</h1>\r\n      <textarea value = {txt} onChange = {updateText}/>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}